<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<!-- (RootContext) 
			WebApplicationContext 
			application-*.xml 
			|================================================| ======================|
			| 												 | 						 |					  
			|											     | 						 |					  
		firstDispatcher                       secondDispatcher 				doDispatcher
		(ServletContext)					  (ServletContext)				(ServletContext)
		WebApplicationContext - Spring의 대장격   WebApplicationContext 		WebApplication 
		firstDispatcher-servlet.xml           secondDispatcher-servlet.xml  doDispatcher-servlet.xml  
		 																	
		스프링 설정 파일 내 선언된 빈의 인스턴스화 시점
		* 모든 스프링 프레임웍 내 선언되어 인스턴스화된 빈은 싱글톤 패턴이 default로 적용.
		RootContext(설정파일 내 빈) - 해당 어플리케이션이 서버 실행을 통해 서비스가 완료되는 시점에 모두 인스턴스화 됨.		
		ServletContext(설정파일 내 빈) - 클라이언트의 요청에 의해 WebApplicationContext가 생성되는 시점에 인스턴스화 됨.																	
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:kr/or/ddit/spring/config/application-*.xml</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 스프링 프레임웍의 프론트 컨트롤러 스프링 설정파일 : 프론트 컨트롤러의 서블릿 등록시의 서블릿 명 ex) /WEB-INF/firstDispatcher 
		+ "-servlet.xml" -->
	<servlet>
		<servlet-name>firstDispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>firstDispatcher</servlet-name>
		<url-pattern>*.first</url-pattern>
	</servlet-mapping>

	<!-- 
		/WEB-INF/secondDispatcher-servlet.xml
	 -->
	<servlet>
		<servlet-name>secondDispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>secondDispatcher</servlet-name>
		<url-pattern>*.second</url-pattern>
	</servlet-mapping>
	<!-- 
		/WEB-INF/doDispatcher-servlet.xml
	 -->
	<servlet>
		<servlet-name>doDispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/mvc/servlet-*.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>doDispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	
	<context-param>
		<param-name>logbackConfigLocation</param-name>
		<param-value>classpath:kr/or/ddit/logback/config/logback.xml</param-value>
	</context-param>
	<listener>
		<listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
	</listener>
</web-app>
