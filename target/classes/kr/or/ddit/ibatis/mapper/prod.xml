<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="prod">

	<typeAlias alias="prodVO" type="kr.or.ddit.vo.ProdVO"/>
	
	<sql id="prod">
		SELECT * FROM PROD
	</sql>
	<sql id="searchProd">
	<dynamic prepend="AND">
			<isNotEmpty property="search_keyword" open="(" close=")">
				<isEqual property="search_keycode" compareValue="ALL">
					PROD_ID LIKE '%'||#search_keyword#||'%'
				OR	PROD_NAME LIKE '%'||#search_keyword#||'%'
				OR	PROD_BUYER IN(SELECT BUYER_ID FROM BUYER WHERE BUYER_NAME LIKE '%'||#search_keyword#||'%')
				</isEqual>
				<isEqual property="search_keycode" compareValue="PRODLGU">
					PROD_ID LIKE '%'||#search_keyword#||'%'
				</isEqual>
				<isEqual property="search_keycode" compareValue="PRODNAME">
					PROD_NAME LIKE '%'||#search_keyword#||'%'
				</isEqual>
				<isEqual property="search_keycode" compareValue="BUYERNAME">
					PROD_BUYER IN(SELECT BUYER_ID FROM BUYER WHERE BUYER_NAME LIKE '%'||#search_keyword#||'%')
				</isEqual>
			</isNotEmpty>
		</dynamic>
	</sql>
	<select id="allProdList" resultClass="prodVO">
	<include refid="prod"/>
		WHERE PROD_DELETE = 'n'
		<include refid="searchProd"/>
	</select>
	
<!-- 	<resultMap class="java.util.HashMap" id="joinVO"> -->
<!-- 		<result property="PROD_DETAIL" column="PROD_DETAIL" jdbcType="CLOB" javaType="java.lang.String"/> -->
<!-- 	</resultMap> -->
	<select id="getProd" parameterClass="map" resultClass="java.util.HashMap">
		SELECT * FROM LPROD L INNER JOIN PROD P
				ON(L.LPROD_GU=P.PROD_LGU)
		WHERE PROD_ID = #prod_id#
	</select>
	
	<select id="idChk" parameterClass="map" resultClass="int">
		SELECT COUNT(*) FROM PROD WHERE PROD_ID = #prod_id#
	</select>
	<insert id="insertProdInfo" parameterClass="prodVO">
		INSERT INTO PROD
       (PROD_ID, PROD_NAME, PROD_LGU, PROD_BUYER, PROD_COST, PROD_PRICE, PROD_SALE, PROD_OUTLINE, PROD_QTYIN, PROD_TOTALSTOCK, PROD_PROPERSTOCK, PROD_INSDATE, PROD_DETAIL, PROD_QTYSALE)
      VALUES(#prod_id#, #prod_name#, #prod_lgu#, #prod_buyer#, #prod_cost#, #prod_price#, #prod_sale#, #prod_outline#, #prod_qtyin#, #prod_totalstock#, #prod_properstock#, #prod_insdate#, #prod_detail#, 0)
	</insert>
	<update id="deleteProd" parameterClass="Map">
		UPDATE PROD
		SET PROD_DELETE = 'y'
		WHERE PROD_ID = #prod_id#
	</update>
	<update id="updateProd" parameterClass="prodVO">
		UPDATE PROD
		SET PROD_COST = #prod_cost#,
			PROD_PRICE = #prod_price#,
			PROD_SALE = #prod_sale#,
			PROD_OUTLINE = #prod_outline#,
			PROD_DETAIL = #prod_detail#,
			PROD_QTYIN = #prod_qtyin#,
			PROD_TOTALSTOCK = #prod_totalstock#,
			PROD_PROPERSTOCK = #prod_properstock#,
			PROD_INSDATE = #prod_insdate#
		WHERE PROD_ID = #prod_id#
	</update>
	<select id="totalCount" parameterClass="map" resultClass="int">
		SELECT COUNT(*)
		  FROM PROD
		 WHERE PROD_DELETE = 'n'
		 <include refid="searchProd"/>
	</select>
</sqlMap>